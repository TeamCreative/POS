[{"D:\\Projects Live\\POS\\inventory\\src\\index.js":"1","D:\\Projects Live\\POS\\inventory\\src\\reportWebVitals.js":"2","D:\\Projects Live\\POS\\inventory\\src\\App.js":"3","D:\\Projects Live\\POS\\inventory\\src\\components\\Dashboard.js":"4","D:\\Projects Live\\POS\\inventory\\src\\components\\Roster.js":"5","D:\\Projects Live\\POS\\inventory\\src\\components\\Firstside.js":"6","D:\\Projects Live\\POS\\inventory\\src\\components\\Sidebarcomponent.js":"7","D:\\Projects Live\\POS\\inventory\\src\\components\\Roster\\Rostertable.js":"8","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Dashnav.js":"9","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Mainname.js":"10","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Total.js":"11","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Charts.js":"12","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Tables.js":"13","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Totalcomponent.js":"14","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\LineChart.js":"15","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\TableMain.js":"16","D:\\Projects Live\\POS\\inventory\\src\\components\\Products.js":"17","D:\\Projects Live\\POS\\inventory\\src\\components\\products\\Productdatatable.js":"18","D:\\Projects Live\\POS\\inventory\\src\\components\\Kitchenrecords.js":"19"},{"size":517,"mtime":1610412816151,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1610412816152,"results":"22","hashOfConfig":"21"},{"size":1142,"mtime":1610432823804,"results":"23","hashOfConfig":"21"},{"size":605,"mtime":1610412816028,"results":"24","hashOfConfig":"21"},{"size":2113,"mtime":1610412816030,"results":"25","hashOfConfig":"21"},{"size":2312,"mtime":1610432823805,"results":"26","hashOfConfig":"21"},{"size":272,"mtime":1610412816032,"results":"27","hashOfConfig":"21"},{"size":12429,"mtime":1610412816031,"results":"28","hashOfConfig":"21"},{"size":335,"mtime":1610412816137,"results":"29","hashOfConfig":"21"},{"size":211,"mtime":1610412816139,"results":"30","hashOfConfig":"21"},{"size":737,"mtime":1610412816142,"results":"31","hashOfConfig":"21"},{"size":416,"mtime":1610412816137,"results":"32","hashOfConfig":"21"},{"size":274,"mtime":1610412816140,"results":"33","hashOfConfig":"21"},{"size":361,"mtime":1610412816142,"results":"34","hashOfConfig":"21"},{"size":903,"mtime":1610412816138,"results":"35","hashOfConfig":"21"},{"size":5288,"mtime":1610412816140,"results":"36","hashOfConfig":"21"},{"size":10041,"mtime":1610432823806,"results":"37","hashOfConfig":"21"},{"size":13729,"mtime":1610412816148,"results":"38","hashOfConfig":"21"},{"size":268,"mtime":1610432823805,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"123sor0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Projects Live\\POS\\inventory\\src\\index.js",[],["85","86"],"D:\\Projects Live\\POS\\inventory\\src\\reportWebVitals.js",[],"D:\\Projects Live\\POS\\inventory\\src\\App.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Dashboard.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Roster.js",["87","88","89","90","91","92","93","94","95"],"import React from \"react\";\r\nimport \"./roster.css\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n//dashcompoenents\r\nimport Dashnav from \"./dashborardcomponents/Dashnav\";\r\nimport Mainname from \"./dashborardcomponents/Mainname\";\r\nimport Total from \"./dashborardcomponents/Total\";\r\nimport Charts from \"./dashborardcomponents/Charts\";\r\nimport Tables from \"./dashborardcomponents/Tables\";\r\n\r\nimport Rostertable from \"./Roster/Rostertable\";\r\n\r\nconst employee = [\r\n  { name: \"gurpreet\" },\r\n  { name: \"gurpreet\" },\r\n  { name: \"gurpreet\" },\r\n  { name: \"gurpreet\" },\r\n];\r\n\r\n//FINDING THE MONDAY AND SUNDAY OF THE WEEK\r\n\r\nvar now = moment();\r\nvar monday = now.clone().weekday(1);\r\nvar SUNDAY = now.clone().weekday(7);\r\nvar isNowWeekday = now.isBetween(monday, SUNDAY, null, \"[]\");\r\n\r\n//FINDING THE MONDAY AND SUNDAY OF THE WEEK\r\n\r\n//dashcomponents\r\nfunction Roster() {\r\n  let listOfDays = [];\r\n  for (let dayDifference = 0; dayDifference <= 6; dayDifference++) {\r\n    //make sure we take a copy of the current day, or .add() will change it\r\n    const newDay = moment(monday).add(dayDifference, \"days\");\r\n    listOfDays.push(newDay.format(\"DD/MM/YYYY\") + \"-\" + newDay.format(\"dddd\"));\r\n  }\r\n\r\n  //GET THE WEEK NUMBER\r\n  Date.prototype.getWeek = function () {\r\n    var target = new Date(this.valueOf());\r\n    var dayNr = (this.getDay() + 6) % 7;\r\n    target.setDate(target.getDate() - dayNr + 3);\r\n    var firstThursday = target.valueOf();\r\n    target.setMonth(0, 1);\r\n    if (target.getDay() != 4) {\r\n      target.setMonth(0, 1 + ((4 - target.getDay() + 7) % 7));\r\n    }\r\n    return 1 + Math.ceil((firstThursday - target) / 604800000);\r\n  };\r\n\r\n  var d = new Date();\r\n  //GET THE WEEK NUMBER\r\n\r\n  return (\r\n    <div className=\"rostermain\">\r\n      <div className=\"Heading\">\r\n        <h2> Roster for week {d.getWeek()}</h2>{\" \"}\r\n        {/* <h3>\r\n          {listOfDays[0].split(\"-\")[0]} -{\" \"}\r\n          {listOfDays[listOfDays.length - 1].split(\"-\")[0]}\r\n        </h3>{\" \"} */}\r\n      </div>\r\n      <Rostertable columndata={listOfDays} datas={employee} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roster;\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\Firstside.js",["96","97","98","99"],"import React from \"react\";\r\nimport \"./firstside.css\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n//import material\r\n\r\nimport RestaurantIcon from \"@material-ui/icons/Restaurant\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport NotificationImportantIcon from \"@material-ui/icons/NotificationImportant\";\r\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n//import compoents\r\nimport Sidebarcomponent from \"./Sidebarcomponent\";\r\n\r\nfunction Firstside() {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Link\r\n        style={{\r\n          color: \"gold\",\r\n          textDecoration: \"none\",\r\n          textShadow: \"10px 10px #ff0000\",\r\n        }}\r\n        style={{ color: \"gold\", textDecoration: \"none\" }}\r\n        to={\"/\"}\r\n      >\r\n        {\" \"}\r\n        <Sidebarcomponent\r\n          active\r\n          Icon={RestaurantIcon}\r\n          text=\"Queen of Jackson\"\r\n        />\r\n      </Link>\r\n      {/* <TwitterIcon className=\"styletwitterIcon\" /> */}\r\n      <Link\r\n        style={{ color: \"white\", textDecoration: \"none\" }}\r\n        to={\"/dashboard\"}\r\n      >\r\n        {\" \"}\r\n        <Sidebarcomponent active Icon={AppsIcon} text=\"Dashboard\" />\r\n      </Link>\r\n      <Link style={{ color: \"white\", textDecoration: \"none\" }} to={\"/roster\"}>\r\n        {\" \"}\r\n        <Sidebarcomponent text=\"Sales\" Icon={MonetizationOnIcon} />\r\n      </Link>\r\n      <Link style={{ color: \"white\", textDecoration: \"none\" }} to={\"/products\"}>\r\n        {\" \"}\r\n        <Sidebarcomponent text=\"Products\" Icon={NotificationImportantIcon} />\r\n      </Link>\r\n      <Link style={{ color: \"white\", textDecoration: \"none\" }} to={\"/roster\"}>\r\n        <Sidebarcomponent Icon={MessageIcon} text=\"Purchase\" />\r\n      </Link>\r\n      <Link style={{ color: \"white\", textDecoration: \"none\" }} to={\"/roster\"}>\r\n        <Sidebarcomponent text=\"Reports\" Icon={BookmarkIcon} />\r\n      </Link>\r\n      <Link style={{ color: \"white\", textDecoration: \"none\" }} to={\"/roster\"}>\r\n        <Sidebarcomponent text=\"Settings\" Icon={MoreHorizIcon} />{\" \"}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Firstside;\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\Sidebarcomponent.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Roster\\Rostertable.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import Box from \"@material-ui/core/Box\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\n//setdata\r\nimport \"./rostertable.css\";\r\n\r\n//setdate\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Row(props) {\r\n  const { row, Time } = props;\r\n  const classes = useRowStyles();\r\n\r\n  const [mon, setMon] = useState(row.monday);\r\n  const [tues, setTue] = useState(row.tuesday);\r\n  const [weds, setWed] = useState(row.wednesday);\r\n  const [thus, setThu] = useState(row.thrusday);\r\n  const [fris, setFri] = useState(row.friday);\r\n  const [sats, setSat] = useState(row.saturday);\r\n  const [suns, setSun] = useState(row.sunday);\r\n  const [totalhours, setTotalHours] = useState(row.totalhours);\r\n\r\n  //total hours varibales for each day\r\n\r\n  const monhours =\r\n    moment(mon.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(mon.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(mon.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(mon.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(mon.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(mon.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const tueshours =\r\n    moment(tues.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(tues.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(tues.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(tues.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(tues.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(tues.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const wedhours =\r\n    moment(weds.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(weds.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(weds.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(weds.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(weds.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(weds.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const thushours =\r\n    moment(thus.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(thus.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(thus.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(thus.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(thus.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(thus.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const frishours =\r\n    moment(fris.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(fris.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(fris.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(fris.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(fris.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(fris.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const sathours =\r\n    moment(sats.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(sats.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(sats.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(sats.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(sats.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(sats.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const sunhours =\r\n    moment(suns.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(suns.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(suns.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(suns.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(suns.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(suns.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  //total hours varibales for each day\r\n\r\n  //calulating total hours\r\n\r\n  const any = [\r\n    monhours,\r\n    tueshours,\r\n    wedhours,\r\n    thushours,\r\n    frishours,\r\n    sathours,\r\n    sunhours,\r\n  ];\r\n\r\n  const sum = any.reduce(\r\n    (acc, time) => acc.add(moment.duration(time)),\r\n    moment.duration()\r\n  );\r\n\r\n  //calulating total hours\r\n\r\n  //submit\r\n  //submitiion after\r\n  const onSubmit = async () => {\r\n    setTotalHours([Math.floor(sum.asHours()), sum.minutes()].join(\":\"));\r\n    const exercise = {\r\n      username: row.username,\r\n      description: row.description,\r\n      monday: mon,\r\n      tuesday: tues,\r\n      wednesday: weds,\r\n      thrusday: thus,\r\n      friday: fris,\r\n      saturday: sats,\r\n      sunday: suns,\r\n      totalhours: totalhours,\r\n      style: true,\r\n    };\r\n\r\n    console.log(exercise);\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/excercises/update/\" + row._id, exercise)\r\n      .then((res) => alert(res.data));\r\n\r\n\r\n  const data2 = {\r\n    username: row.username,\r\n    description: row.description,\r\n    monday: mon,\r\n    tuesday: tues,\r\n    wednesday: weds,\r\n    thrusday: thus,\r\n    friday: fris,\r\n    saturday: sats,\r\n    sunday: suns,\r\n    totalhours: totalhours,\r\n    style: true,\r\n  }\r\n\r\n\r\n   await axios.post(\"http://localhost:5000/excercises/access\", data2)\r\n   .then((res) => alert(res.data.status))\r\n\r\n\r\n  };\r\n\r\n  //submit\r\n\r\n  useEffect(() => {\r\n    setTotalHours([Math.floor(sum.asHours()), sum.minutes()].join(\":\"));\r\n    console.log(\"total hours changed\");\r\n  }, [[Math.floor(sum.asHours()), sum.minutes()].join(\":\")]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell component=\"th\" className=\"cellsName\" scope=\"row\">\r\n          <h3 className=\"Name\">{row.description}</h3>\r\n          <h3 className=\"positionName\">{row.username}</h3>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${monhours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={mon}\r\n            onChange={(e) => setMon(e.target.value)}\r\n          />{\" \"}\r\n          <h4>{monhours == \"NaN:NaN\" ? \" time Off\" : monhours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${tueshours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={tues}\r\n            onChange={(e) => setTue(e.target.value)}\r\n          />\r\n          <h4>{tueshours == \"NaN:NaN\" ? \" time Off\" : tueshours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${wedhours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={weds}\r\n            onChange={(e) => setWed(e.target.value)}\r\n          />\r\n          <h4>{wedhours == \"NaN:NaN\" ? \" time Off\" : wedhours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${thushours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={thus}\r\n            onChange={(e) => setThu(e.target.value)}\r\n          />\r\n          <h4>{thushours == \"NaN:NaN\" ? \" time Off\" : thushours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${frishours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={fris}\r\n            onChange={(e) => setFri(e.target.value)}\r\n          />\r\n          <h4>{frishours == \"NaN:NaN\" ? \" time Off\" : frishours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${sathours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={sats}\r\n            onChange={(e) => setSat(e.target.value)}\r\n          />\r\n          <h4>{sathours == \"NaN:NaN\" ? \" time Off\" : sathours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${sunhours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={suns}\r\n            onChange={(e) => setSun(e.target.value)}\r\n          />\r\n          <h4>{sunhours == \"NaN:NaN\" ? \" time Off\" : sunhours}</h4>\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"cells\" style ={{minWidth:\"100px\"}}>\r\n          {[Math.floor(sum.asHours()), sum.minutes()].join(\":\")}\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"cells\" style={{borderRight:\"none\"}}>\r\n          <Button variant=\"outlined\"  color=\"primary\" onClick={() => onSubmit()}>Update</Button>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function Rostertable(columndata, datas) {\r\n  const [intialdata, setIntialData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/excercises/\")\r\n      .then((response) => setIntialData(response.data))\r\n      .catch((error) => {\r\n        return console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //findong the week number\r\n  const data = columndata.columndata;\r\n  //findong the week number\r\n  // total hours for the week\r\n\r\n  console.log(data);\r\n\r\n  const tt = intialdata.map((e) => e.totalhours);\r\n  const sum = tt.reduce(\r\n    (acc, time) => acc.add(moment.duration(time)),\r\n    moment.duration()\r\n  );\r\n  const totalHoursfortheWeek = [Math.floor(sum.asHours()), sum.minutes()].join(\r\n    \":\"\r\n  );\r\n\r\n  // total hours for the week\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" size=\"small\" className=\"table\">\r\n        <TableHead>\r\n          <TableRow className=\"Headers\">\r\n            <TableCell> Employee </TableCell>\r\n            {data.map((e) => (\r\n              <TableCell align=\"center\" className=\"HeadingCell\">\r\n                <h4 style={{ padding: \"0px\" }}>{e.split(\"-\")[0]}</h4>\r\n                <h4 style={{ padding: \"0px\" }}>{e.split(\"-\")[1]}</h4>\r\n              </TableCell>\r\n            ))}\r\n            <TableCell align=\"center\" className=\"HeadingCell\"> Total Hours</TableCell>\r\n            <TableCell align=\"center\" className=\"HeadingCell\"> </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {intialdata.map((row) => (\r\n            <Row key={row._id} row={row} />\r\n          ))}\r\n          <TableRow className=\"totalHours\">\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" className=\"cells\" scope=\"row\" >\r\n              {\" \"}\r\n             <h4>Total Hours for the Week</h4> \r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\" className=\"cells\"  >\r\n              <h2>{totalHoursfortheWeek}</h2>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Dashnav.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Mainname.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Total.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Charts.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Tables.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Totalcomponent.js",[],["118","119"],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\LineChart.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\TableMain.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Products.js",["120","121","122","123","124","125","126"],"import React, { useState } from \"react\";\r\nimport \"./products.css\";\r\n\r\n//matrial ui\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\n//autocomplete\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n//autocomplete\r\n//material ui\r\n\r\n//components import\r\nimport Productdatatable from \"./products/Productdatatable\";\r\n\r\n//compoenents import\r\n\r\nfunction Products() {\r\n  const [productname, setProductname] = useState(\"\");\r\n  const [productsuppliername, setProductsuppliername] = useState(\"No Supplier\");\r\n  console.log(productname);\r\n\r\n  return (\r\n    <div className=\"productsmain\">\r\n      <div className=\"prroductscroll\">\r\n        <div className=\"MainProductName\">\r\n          <h2>Products</h2>\r\n        </div>\r\n        <div className=\"MainProductHelp\">\r\n          <p>Add,view and Edit your products all in one Place</p>\r\n        </div>\r\n\r\n        <div className=\"ProductSearchSection\">\r\n          {/* input one */}\r\n          <Autocomplete\r\n            fullWidth\r\n            autoComplete\r\n            id=\"combo-box-demo\"\r\n            className=\"ProductSearchSection_Inputs\"\r\n            options={productnameupdated}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, value) => setProductname(value)}\r\n            style={{ minWidth: \"400px\" }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                placeholder=\"eg . Lamb ,chicken\"\r\n                label=\"Enter Product Name\"\r\n                labelWidth={145}\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n          {/* input one */}\r\n        </div>\r\n        <div className=\"ProductSearchSection\">\r\n          {/* input one */}\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            className=\"ProductSearchSection_Inputs\"\r\n            options={productSuppliername}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, value) => setProductsuppliername(value)}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"ALL Suppliers\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          {/* input one */}\r\n          {/* input two */}\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            className=\"ProductSearchSection_Inputs\"\r\n            options={productbrandsname}\r\n            getOptionLabel={(option) => option}\r\n            onChange={(event, value) => console.log(value)}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Brands\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          {/* input two */}\r\n          {/* input three */}\r\n          <Autocomplete\r\n            id=\"combo-box-demo\"\r\n            className=\"ProductSearchSection_Inputs\"\r\n            options={top100Films}\r\n            getOptionLabel={(option) => option.title}\r\n            onChange={(event, value) => console.log(value)}\r\n            style={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Status\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          {/* input three */}\r\n        </div>\r\n        <div className=\"ProductSearchSection\">\r\n          <Productdatatable\r\n            productnamefilter={productname}\r\n            productsuppliername={productsuppliername}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rows = [\r\n  {\r\n    name: \"Cupcake\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcakes\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcakess\",\r\n    Quantity: 25,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcaksss\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcaksse\",\r\n    Quantity: 3,\r\n    Supplier: \"cool\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Lamb\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Gurpreet\",\r\n    Quantity: 52,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"wheat flour\",\r\n    Quantity: 20,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcaksssse\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n];\r\n\r\nconst productnameupdated = rows.map((e) => e.name);\r\nconst productSuppliername = rows.map((e) => e.Supplier);\r\nconst productbrandsname = rows.map((e) => e.Note); // add brand name instead order\r\n\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n  { title: \"Pulp Fiction\", year: 1994 },\r\n  { title: \"The Lord of the Rings: The Return of the King\", year: 2003 },\r\n  { title: \"The Good, the Bad and the Ugly\", year: 1966 },\r\n  { title: \"Fight Club\", year: 1999 },\r\n  { title: \"The Lord of the Rings: The Fellowship of the Ring\", year: 2001 },\r\n  { title: \"Star Wars: Episode V - The Empire Strikes Back\", year: 1980 },\r\n  { title: \"Forrest Gump\", year: 1994 },\r\n  { title: \"Inception\", year: 2010 },\r\n  { title: \"The Lord of the Rings: The Two Towers\", year: 2002 },\r\n  { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n  { title: \"Goodfellas\", year: 1990 },\r\n  { title: \"The Matrix\", year: 1999 },\r\n  { title: \"Seven Samurai\", year: 1954 },\r\n  { title: \"Star Wars: Episode IV - A New Hope\", year: 1977 },\r\n  { title: \"City of God\", year: 2002 },\r\n  { title: \"Se7en\", year: 1995 },\r\n  { title: \"The Silence of the Lambs\", year: 1991 },\r\n  { title: \"It's a Wonderful Life\", year: 1946 },\r\n  { title: \"Life Is Beautiful\", year: 1997 },\r\n  { title: \"The Usual Suspects\", year: 1995 },\r\n  { title: \"Léon: The Professional\", year: 1994 },\r\n  { title: \"Spirited Away\", year: 2001 },\r\n  { title: \"Saving Private Ryan\", year: 1998 },\r\n  { title: \"Once Upon a Time in the West\", year: 1968 },\r\n  { title: \"American History X\", year: 1998 },\r\n  { title: \"Interstellar\", year: 2014 },\r\n  { title: \"Casablanca\", year: 1942 },\r\n  { title: \"City Lights\", year: 1931 },\r\n  { title: \"Psycho\", year: 1960 },\r\n  { title: \"The Green Mile\", year: 1999 },\r\n  { title: \"The Intouchables\", year: 2011 },\r\n  { title: \"Modern Times\", year: 1936 },\r\n  { title: \"Raiders of the Lost Ark\", year: 1981 },\r\n  { title: \"Rear Window\", year: 1954 },\r\n  { title: \"The Pianist\", year: 2002 },\r\n  { title: \"The Departed\", year: 2006 },\r\n  { title: \"Terminator 2: Judgment Day\", year: 1991 },\r\n  { title: \"Back to the Future\", year: 1985 },\r\n  { title: \"Whiplash\", year: 2014 },\r\n  { title: \"Gladiator\", year: 2000 },\r\n  { title: \"Memento\", year: 2000 },\r\n  { title: \"The Prestige\", year: 2006 },\r\n  { title: \"The Lion King\", year: 1994 },\r\n  { title: \"Apocalypse Now\", year: 1979 },\r\n  { title: \"Alien\", year: 1979 },\r\n  { title: \"Sunset Boulevard\", year: 1950 },\r\n  {\r\n    title:\r\n      \"Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb\",\r\n    year: 1964,\r\n  },\r\n  { title: \"The Great Dictator\", year: 1940 },\r\n  { title: \"Cinema Paradiso\", year: 1988 },\r\n  { title: \"The Lives of Others\", year: 2006 },\r\n  { title: \"Grave of the Fireflies\", year: 1988 },\r\n  { title: \"Paths of Glory\", year: 1957 },\r\n  { title: \"Django Unchained\", year: 2012 },\r\n  { title: \"The Shining\", year: 1980 },\r\n  { title: \"WALL·E\", year: 2008 },\r\n  { title: \"American Beauty\", year: 1999 },\r\n  { title: \"The Dark Knight Rises\", year: 2012 },\r\n  { title: \"Princess Mononoke\", year: 1997 },\r\n  { title: \"Aliens\", year: 1986 },\r\n  { title: \"Oldboy\", year: 2003 },\r\n  { title: \"Once Upon a Time in America\", year: 1984 },\r\n  { title: \"Witness for the Prosecution\", year: 1957 },\r\n  { title: \"Das Boot\", year: 1981 },\r\n  { title: \"Citizen Kane\", year: 1941 },\r\n  { title: \"North by Northwest\", year: 1959 },\r\n  { title: \"Vertigo\", year: 1958 },\r\n  { title: \"Star Wars: Episode VI - Return of the Jedi\", year: 1983 },\r\n  { title: \"Reservoir Dogs\", year: 1992 },\r\n  { title: \"Braveheart\", year: 1995 },\r\n  { title: \"M\", year: 1931 },\r\n  { title: \"Requiem for a Dream\", year: 2000 },\r\n  { title: \"Amélie\", year: 2001 },\r\n  { title: \"A Clockwork Orange\", year: 1971 },\r\n  { title: \"Like Stars on Earth\", year: 2007 },\r\n  { title: \"Taxi Driver\", year: 1976 },\r\n  { title: \"Lawrence of Arabia\", year: 1962 },\r\n  { title: \"Double Indemnity\", year: 1944 },\r\n  { title: \"Eternal Sunshine of the Spotless Mind\", year: 2004 },\r\n  { title: \"Amadeus\", year: 1984 },\r\n  { title: \"To Kill a Mockingbird\", year: 1962 },\r\n  { title: \"Toy Story 3\", year: 2010 },\r\n  { title: \"Logan\", year: 2017 },\r\n  { title: \"Full Metal Jacket\", year: 1987 },\r\n  { title: \"Dangal\", year: 2016 },\r\n  { title: \"The Sting\", year: 1973 },\r\n  { title: \"2001: A Space Odyssey\", year: 1968 },\r\n  { title: \"Singin' in the Rain\", year: 1952 },\r\n  { title: \"Toy Story\", year: 1995 },\r\n  { title: \"Bicycle Thieves\", year: 1948 },\r\n  { title: \"The Kid\", year: 1921 },\r\n  { title: \"Inglourious Basterds\", year: 2009 },\r\n  { title: \"Snatch\", year: 2000 },\r\n  { title: \"3 Idiots\", year: 2009 },\r\n  { title: \"Monty Python and the Holy Grail\", year: 1975 },\r\n];\r\n\r\nexport default Products;\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\products\\Productdatatable.js",["127","128","129","130","131","132","133"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nconst rows = [\r\n  {\r\n    name: \"Cupcake\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcakes\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcakess\",\r\n    Quantity: 25,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcaksss\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcaksse\",\r\n    Quantity: 3,\r\n    Supplier: \"cool\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Lamb\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Gurpreet\",\r\n    Quantity: 52,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"wheat flour\",\r\n    Quantity: 20,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n  {\r\n    name: \"Cupcaksssse\",\r\n    Quantity: 30,\r\n    Supplier: \"GilMours\",\r\n    Order: 0,\r\n    Note: \"Please Fresh one only\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Product Quantity\",\r\n  },\r\n  { id: \"Quantity\", numeric: true, disablePadding: false, label: \"Quantity\" },\r\n  { id: \"Supplier\", numeric: true, disablePadding: false, label: \"Supplier\" },\r\n  { id: \"Order\", numeric: true, disablePadding: false, label: \"Order \" },\r\n  { id: \"Note\", numeric: true, disablePadding: false, label: \"Note\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Productdatatable({\r\n  productnamefilter,\r\n  productsuppliername,\r\n}) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Quantity\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const filteredrow = rows.filter((e) => e.name == productnamefilter);\r\n  console.log(productsuppliername);\r\n\r\n  const filteratedProductname = filteredrow.filter(\r\n    (e) => e.Supplier == productsuppliername\r\n  );\r\n  // console.log(filteratedProductname)\r\n\r\n  const filteratedProductnamerows = rows.filter(\r\n    (e) => e.Supplier == productsuppliername\r\n  );\r\n  // console.log(filteratedProductname)\r\n   console.log(filteredrow.length)\r\n   console.log(productsuppliername)\r\n\r\n  const finallist = filteredrow.length == 0 &&  (productsuppliername == \"No Supplier\" || productsuppliername == null ) ? rows\r\n   : filteredrow.length > 0 && (productsuppliername == \"No Supplier\" || productsuppliername == null ) ? filteredrow\r\n   : filteredrow.length > 0 && productsuppliername != \"No Supplier\"   ? filteratedProductname\r\n   : filteratedProductnamerows\r\n\r\n\r\n  const finalrow = \r\n    filteredrow.length > 0 \r\n      ? filteredrow\r\n      // : filteredrow.length > 0 && productsuppliername != null\r\n      // ? filteratedProductname\r\n      : productsuppliername != null\r\n      ? filteratedProductnamerows\r\n      : rows;\r\n  console.log(finalrow);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(finallist , getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.Quantity}</TableCell>\r\n                      <TableCell align=\"right\">{row.Supplier}</TableCell>\r\n                      <TableCell align=\"right\">{row.Order}</TableCell>\r\n                      <TableCell align=\"right\">{row.Note}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\Kitchenrecords.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":14},{"ruleId":"138","severity":1,"message":"142","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":15},{"ruleId":"138","severity":1,"message":"143","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":16},{"ruleId":"138","severity":1,"message":"144","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":13},{"ruleId":"138","severity":1,"message":"145","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":14},{"ruleId":"138","severity":1,"message":"147","line":26,"column":5,"nodeType":"140","messageId":"141","endLine":26,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":40,"column":3,"nodeType":"150","messageId":"151","endLine":50,"endColumn":4},{"ruleId":"152","severity":1,"message":"153","line":46,"column":25,"nodeType":"154","messageId":"151","endLine":46,"endColumn":27},{"ruleId":"138","severity":1,"message":"155","line":4,"column":27,"nodeType":"140","messageId":"141","endLine":4,"endColumn":33},{"ruleId":"138","severity":1,"message":"156","line":4,"column":35,"nodeType":"140","messageId":"141","endLine":4,"endColumn":41},{"ruleId":"138","severity":1,"message":"157","line":4,"column":43,"nodeType":"140","messageId":"141","endLine":4,"endColumn":48},{"ruleId":"158","severity":1,"message":"159","line":26,"column":9,"nodeType":"160","endLine":26,"endColumn":58},{"ruleId":"138","severity":1,"message":"161","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":11},{"ruleId":"138","severity":1,"message":"162","line":28,"column":16,"nodeType":"140","messageId":"141","endLine":28,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":254,"column":6,"nodeType":"165","endLine":254,"endColumn":60,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":254,"column":7,"nodeType":"168","endLine":254,"endColumn":59},{"ruleId":"152","severity":1,"message":"169","line":265,"column":35,"nodeType":"154","messageId":"151","endLine":265,"endColumn":37},{"ruleId":"152","severity":1,"message":"169","line":272,"column":25,"nodeType":"154","messageId":"151","endLine":272,"endColumn":27},{"ruleId":"152","severity":1,"message":"169","line":276,"column":36,"nodeType":"154","messageId":"151","endLine":276,"endColumn":38},{"ruleId":"152","severity":1,"message":"169","line":283,"column":26,"nodeType":"154","messageId":"151","endLine":283,"endColumn":28},{"ruleId":"152","severity":1,"message":"169","line":287,"column":35,"nodeType":"154","messageId":"151","endLine":287,"endColumn":37},{"ruleId":"152","severity":1,"message":"169","line":294,"column":25,"nodeType":"154","messageId":"151","endLine":294,"endColumn":27},{"ruleId":"152","severity":1,"message":"169","line":298,"column":36,"nodeType":"154","messageId":"151","endLine":298,"endColumn":38},{"ruleId":"152","severity":1,"message":"169","line":305,"column":26,"nodeType":"154","messageId":"151","endLine":305,"endColumn":28},{"ruleId":"152","severity":1,"message":"169","line":309,"column":36,"nodeType":"154","messageId":"151","endLine":309,"endColumn":38},{"ruleId":"152","severity":1,"message":"169","line":316,"column":26,"nodeType":"154","messageId":"151","endLine":316,"endColumn":28},{"ruleId":"152","severity":1,"message":"169","line":320,"column":35,"nodeType":"154","messageId":"151","endLine":320,"endColumn":37},{"ruleId":"152","severity":1,"message":"169","line":327,"column":25,"nodeType":"154","messageId":"151","endLine":327,"endColumn":27},{"ruleId":"152","severity":1,"message":"169","line":331,"column":35,"nodeType":"154","messageId":"151","endLine":331,"endColumn":37},{"ruleId":"152","severity":1,"message":"169","line":338,"column":25,"nodeType":"154","messageId":"151","endLine":338,"endColumn":27},{"ruleId":"134","replacedBy":"170"},{"ruleId":"136","replacedBy":"171"},{"ruleId":"138","severity":1,"message":"172","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":13},{"ruleId":"138","severity":1,"message":"173","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":18},{"ruleId":"138","severity":1,"message":"174","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":22},{"ruleId":"138","severity":1,"message":"175","line":8,"column":8,"nodeType":"140","messageId":"141","endLine":8,"endColumn":22},{"ruleId":"138","severity":1,"message":"176","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":19},{"ruleId":"138","severity":1,"message":"177","line":10,"column":8,"nodeType":"140","messageId":"141","endLine":10,"endColumn":21},{"ruleId":"138","severity":1,"message":"178","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":18},{"ruleId":"152","severity":1,"message":"169","line":350,"column":49,"nodeType":"154","messageId":"151","endLine":350,"endColumn":51},{"ruleId":"152","severity":1,"message":"169","line":354,"column":23,"nodeType":"154","messageId":"151","endLine":354,"endColumn":25},{"ruleId":"152","severity":1,"message":"169","line":359,"column":23,"nodeType":"154","messageId":"151","endLine":359,"endColumn":25},{"ruleId":"152","severity":1,"message":"169","line":365,"column":40,"nodeType":"154","messageId":"151","endLine":365,"endColumn":42},{"ruleId":"152","severity":1,"message":"169","line":365,"column":70,"nodeType":"154","messageId":"151","endLine":365,"endColumn":72},{"ruleId":"152","severity":1,"message":"169","line":366,"column":53,"nodeType":"154","messageId":"151","endLine":366,"endColumn":55},{"ruleId":"152","severity":1,"message":"153","line":367,"column":52,"nodeType":"154","messageId":"151","endLine":367,"endColumn":54},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Moment' is defined but never used.","Identifier","unusedVar","'Dashnav' is defined but never used.","'Mainname' is defined but never used.","'Total' is defined but never used.","'Charts' is defined but never used.","'Tables' is defined but never used.","'isNowWeekday' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Box' is defined but never used.","'Time' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sum'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","Expected '===' and instead saw '=='.",["179"],["180"],"'Input' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'FormHelperText' is defined but never used.","'FormControl' is defined but never used.","'OutlinedInput' is defined but never used.","'SearchIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [sum]",{"range":"184","text":"185"},[6337,6391],"[sum]"]