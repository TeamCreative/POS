[{"D:\\Projects Live\\POS\\inventory\\src\\index.js":"1","D:\\Projects Live\\POS\\inventory\\src\\reportWebVitals.js":"2","D:\\Projects Live\\POS\\inventory\\src\\App.js":"3","D:\\Projects Live\\POS\\inventory\\src\\components\\Dashboard.js":"4","D:\\Projects Live\\POS\\inventory\\src\\components\\Roster.js":"5","D:\\Projects Live\\POS\\inventory\\src\\components\\Firstside.js":"6","D:\\Projects Live\\POS\\inventory\\src\\components\\Sidebarcomponent.js":"7","D:\\Projects Live\\POS\\inventory\\src\\components\\Roster\\Rostertable.js":"8","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Dashnav.js":"9","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Mainname.js":"10","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Total.js":"11","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Charts.js":"12","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Tables.js":"13","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Totalcomponent.js":"14","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\LineChart.js":"15","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\TableMain.js":"16","D:\\Projects Live\\POS\\inventory\\src\\components\\Products.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":919,"mtime":1610060222412,"results":"21","hashOfConfig":"19"},{"size":605,"mtime":1608886000500,"results":"22","hashOfConfig":"19"},{"size":2113,"mtime":1609910102173,"results":"23","hashOfConfig":"19"},{"size":2299,"mtime":1610060333335,"results":"24","hashOfConfig":"19"},{"size":272,"mtime":1608770738891,"results":"25","hashOfConfig":"19"},{"size":12429,"mtime":1609982187118,"results":"26","hashOfConfig":"19"},{"size":335,"mtime":1608773820095,"results":"27","hashOfConfig":"19"},{"size":211,"mtime":1608774493807,"results":"28","hashOfConfig":"19"},{"size":737,"mtime":1608847204265,"results":"29","hashOfConfig":"19"},{"size":416,"mtime":1608882946365,"results":"30","hashOfConfig":"19"},{"size":274,"mtime":1608885917160,"results":"31","hashOfConfig":"19"},{"size":361,"mtime":1608847054754,"results":"32","hashOfConfig":"19"},{"size":903,"mtime":1608883044851,"results":"33","hashOfConfig":"19"},{"size":5288,"mtime":1608886623315,"results":"34","hashOfConfig":"19"},{"size":8888,"mtime":1610068578029,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"123sor0",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects Live\\POS\\inventory\\src\\index.js",[],["73","74"],"D:\\Projects Live\\POS\\inventory\\src\\reportWebVitals.js",[],"D:\\Projects Live\\POS\\inventory\\src\\App.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Dashboard.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Roster.js",["75","76","77","78","79","80","81","82","83"],"import React from \"react\";\r\nimport \"./roster.css\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\n//dashcompoenents\r\nimport Dashnav from \"./dashborardcomponents/Dashnav\";\r\nimport Mainname from \"./dashborardcomponents/Mainname\";\r\nimport Total from \"./dashborardcomponents/Total\";\r\nimport Charts from \"./dashborardcomponents/Charts\";\r\nimport Tables from \"./dashborardcomponents/Tables\";\r\n\r\nimport Rostertable from \"./Roster/Rostertable\";\r\n\r\nconst employee = [\r\n  { name: \"gurpreet\" },\r\n  { name: \"gurpreet\" },\r\n  { name: \"gurpreet\" },\r\n  { name: \"gurpreet\" },\r\n];\r\n\r\n//FINDING THE MONDAY AND SUNDAY OF THE WEEK\r\n\r\nvar now = moment();\r\nvar monday = now.clone().weekday(1);\r\nvar SUNDAY = now.clone().weekday(7);\r\nvar isNowWeekday = now.isBetween(monday, SUNDAY, null, \"[]\");\r\n\r\n//FINDING THE MONDAY AND SUNDAY OF THE WEEK\r\n\r\n//dashcomponents\r\nfunction Roster() {\r\n  let listOfDays = [];\r\n  for (let dayDifference = 0; dayDifference <= 6; dayDifference++) {\r\n    //make sure we take a copy of the current day, or .add() will change it\r\n    const newDay = moment(monday).add(dayDifference, \"days\");\r\n    listOfDays.push(newDay.format(\"DD/MM/YYYY\") + \"-\" + newDay.format(\"dddd\"));\r\n  }\r\n\r\n  //GET THE WEEK NUMBER\r\n  Date.prototype.getWeek = function () {\r\n    var target = new Date(this.valueOf());\r\n    var dayNr = (this.getDay() + 6) % 7;\r\n    target.setDate(target.getDate() - dayNr + 3);\r\n    var firstThursday = target.valueOf();\r\n    target.setMonth(0, 1);\r\n    if (target.getDay() != 4) {\r\n      target.setMonth(0, 1 + ((4 - target.getDay() + 7) % 7));\r\n    }\r\n    return 1 + Math.ceil((firstThursday - target) / 604800000);\r\n  };\r\n\r\n  var d = new Date();\r\n  //GET THE WEEK NUMBER\r\n\r\n  return (\r\n    <div className=\"rostermain\">\r\n      <div className=\"Heading\">\r\n        <h2> Roster for week {d.getWeek()}</h2>{\" \"}\r\n        {/* <h3>\r\n          {listOfDays[0].split(\"-\")[0]} -{\" \"}\r\n          {listOfDays[listOfDays.length - 1].split(\"-\")[0]}\r\n        </h3>{\" \"} */}\r\n      </div>\r\n      <Rostertable columndata={listOfDays} datas={employee} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roster;\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\Firstside.js",["84","85","86","87"],"D:\\Projects Live\\POS\\inventory\\src\\components\\Sidebarcomponent.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Roster\\Rostertable.js",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import Box from \"@material-ui/core/Box\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\n//setdata\r\nimport \"./rostertable.css\";\r\n\r\n//setdate\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    \"& > *\": {\r\n      borderBottom: \"unset\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction Row(props) {\r\n  const { row, Time } = props;\r\n  const classes = useRowStyles();\r\n\r\n  const [mon, setMon] = useState(row.monday);\r\n  const [tues, setTue] = useState(row.tuesday);\r\n  const [weds, setWed] = useState(row.wednesday);\r\n  const [thus, setThu] = useState(row.thrusday);\r\n  const [fris, setFri] = useState(row.friday);\r\n  const [sats, setSat] = useState(row.saturday);\r\n  const [suns, setSun] = useState(row.sunday);\r\n  const [totalhours, setTotalHours] = useState(row.totalhours);\r\n\r\n  //total hours varibales for each day\r\n\r\n  const monhours =\r\n    moment(mon.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(mon.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(mon.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(mon.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(mon.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(mon.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const tueshours =\r\n    moment(tues.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(tues.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(tues.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(tues.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(tues.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(tues.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const wedhours =\r\n    moment(weds.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(weds.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(weds.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(weds.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(weds.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(weds.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const thushours =\r\n    moment(thus.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(thus.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(thus.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(thus.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(thus.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(thus.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const frishours =\r\n    moment(fris.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(fris.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(fris.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(fris.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(fris.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(fris.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const sathours =\r\n    moment(sats.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(sats.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(sats.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(sats.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(sats.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(sats.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  const sunhours =\r\n    moment(suns.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n      moment(suns.split(\"-\")[0], \"HH:mm:ss a\"),\r\n      \"hours\"\r\n    ) +\r\n    \":\" +\r\n    (parseInt(\r\n      moment(suns.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n        moment(suns.split(\"-\")[0], \"HH:mm:ss a\"),\r\n        \"minutes\"\r\n      )\r\n    ) -\r\n      parseInt(\r\n        moment(suns.split(\"-\")[1], \"HH:mm:ss a\").diff(\r\n          moment(suns.split(\"-\")[0], \"HH:mm:ss a\"),\r\n          \"hours\"\r\n        )\r\n      ) *\r\n        60);\r\n\r\n  //total hours varibales for each day\r\n\r\n  //calulating total hours\r\n\r\n  const any = [\r\n    monhours,\r\n    tueshours,\r\n    wedhours,\r\n    thushours,\r\n    frishours,\r\n    sathours,\r\n    sunhours,\r\n  ];\r\n\r\n  const sum = any.reduce(\r\n    (acc, time) => acc.add(moment.duration(time)),\r\n    moment.duration()\r\n  );\r\n\r\n  //calulating total hours\r\n\r\n  //submit\r\n  //submitiion after\r\n  const onSubmit = async () => {\r\n    setTotalHours([Math.floor(sum.asHours()), sum.minutes()].join(\":\"));\r\n    const exercise = {\r\n      username: row.username,\r\n      description: row.description,\r\n      monday: mon,\r\n      tuesday: tues,\r\n      wednesday: weds,\r\n      thrusday: thus,\r\n      friday: fris,\r\n      saturday: sats,\r\n      sunday: suns,\r\n      totalhours: totalhours,\r\n      style: true,\r\n    };\r\n\r\n    console.log(exercise);\r\n\r\n    await axios\r\n      .post(\"http://localhost:5000/excercises/update/\" + row._id, exercise)\r\n      .then((res) => alert(res.data));\r\n\r\n\r\n  const data2 = {\r\n    username: row.username,\r\n    description: row.description,\r\n    monday: mon,\r\n    tuesday: tues,\r\n    wednesday: weds,\r\n    thrusday: thus,\r\n    friday: fris,\r\n    saturday: sats,\r\n    sunday: suns,\r\n    totalhours: totalhours,\r\n    style: true,\r\n  }\r\n\r\n\r\n   await axios.post(\"http://localhost:5000/excercises/access\", data2)\r\n   .then((res) => alert(res.data.status))\r\n\r\n\r\n  };\r\n\r\n  //submit\r\n\r\n  useEffect(() => {\r\n    setTotalHours([Math.floor(sum.asHours()), sum.minutes()].join(\":\"));\r\n    console.log(\"total hours changed\");\r\n  }, [[Math.floor(sum.asHours()), sum.minutes()].join(\":\")]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell component=\"th\" className=\"cellsName\" scope=\"row\">\r\n          <h3 className=\"Name\">{row.description}</h3>\r\n          <h3 className=\"positionName\">{row.username}</h3>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${monhours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={mon}\r\n            onChange={(e) => setMon(e.target.value)}\r\n          />{\" \"}\r\n          <h4>{monhours == \"NaN:NaN\" ? \" time Off\" : monhours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${tueshours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={tues}\r\n            onChange={(e) => setTue(e.target.value)}\r\n          />\r\n          <h4>{tueshours == \"NaN:NaN\" ? \" time Off\" : tueshours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${wedhours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={weds}\r\n            onChange={(e) => setWed(e.target.value)}\r\n          />\r\n          <h4>{wedhours == \"NaN:NaN\" ? \" time Off\" : wedhours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${thushours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={thus}\r\n            onChange={(e) => setThu(e.target.value)}\r\n          />\r\n          <h4>{thushours == \"NaN:NaN\" ? \" time Off\" : thushours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${frishours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={fris}\r\n            onChange={(e) => setFri(e.target.value)}\r\n          />\r\n          <h4>{frishours == \"NaN:NaN\" ? \" time Off\" : frishours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${sathours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={sats}\r\n            onChange={(e) => setSat(e.target.value)}\r\n          />\r\n          <h4>{sathours == \"NaN:NaN\" ? \" time Off\" : sathours}</h4>\r\n        </TableCell>\r\n        <TableCell\r\n          align=\"center\"\r\n          className={` ${sunhours == \"NaN:NaN\" ? \"deadcells\" : \"cells\"}`}\r\n        >\r\n          <input\r\n            type=\"string\"\r\n            value={suns}\r\n            onChange={(e) => setSun(e.target.value)}\r\n          />\r\n          <h4>{sunhours == \"NaN:NaN\" ? \" time Off\" : sunhours}</h4>\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"cells\" style ={{minWidth:\"100px\"}}>\r\n          {[Math.floor(sum.asHours()), sum.minutes()].join(\":\")}\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"cells\" style={{borderRight:\"none\"}}>\r\n          <Button variant=\"outlined\"  color=\"primary\" onClick={() => onSubmit()}>Update</Button>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default function Rostertable(columndata, datas) {\r\n  const [intialdata, setIntialData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/excercises/\")\r\n      .then((response) => setIntialData(response.data))\r\n      .catch((error) => {\r\n        return console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //findong the week number\r\n  const data = columndata.columndata;\r\n  //findong the week number\r\n  // total hours for the week\r\n\r\n  console.log(data);\r\n\r\n  const tt = intialdata.map((e) => e.totalhours);\r\n  const sum = tt.reduce(\r\n    (acc, time) => acc.add(moment.duration(time)),\r\n    moment.duration()\r\n  );\r\n  const totalHoursfortheWeek = [Math.floor(sum.asHours()), sum.minutes()].join(\r\n    \":\"\r\n  );\r\n\r\n  // total hours for the week\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\" size=\"small\" className=\"table\">\r\n        <TableHead>\r\n          <TableRow className=\"Headers\">\r\n            <TableCell> Employee </TableCell>\r\n            {data.map((e) => (\r\n              <TableCell align=\"center\" className=\"HeadingCell\">\r\n                <h4 style={{ padding: \"0px\" }}>{e.split(\"-\")[0]}</h4>\r\n                <h4 style={{ padding: \"0px\" }}>{e.split(\"-\")[1]}</h4>\r\n              </TableCell>\r\n            ))}\r\n            <TableCell align=\"center\" className=\"HeadingCell\"> Total Hours</TableCell>\r\n            <TableCell align=\"center\" className=\"HeadingCell\"> </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {intialdata.map((row) => (\r\n            <Row key={row._id} row={row} />\r\n          ))}\r\n          <TableRow className=\"totalHours\">\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {\" \"}\r\n            </TableCell>\r\n            <TableCell component=\"th\" className=\"cells\" scope=\"row\" >\r\n              {\" \"}\r\n             <h4>Total Hours for the Week</h4> \r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\" className=\"cells\"  >\r\n              <h2>{totalHoursfortheWeek}</h2>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Dashnav.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Mainname.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Total.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Charts.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Tables.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\Totalcomponent.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\LineChart.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\dashborardcomponents\\TableMain.js",[],"D:\\Projects Live\\POS\\inventory\\src\\components\\Products.js",["106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":14},{"ruleId":"112","severity":1,"message":"116","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":15},{"ruleId":"112","severity":1,"message":"117","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":16},{"ruleId":"112","severity":1,"message":"118","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"119","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":14},{"ruleId":"112","severity":1,"message":"121","line":26,"column":5,"nodeType":"114","messageId":"115","endLine":26,"endColumn":17},{"ruleId":"122","severity":1,"message":"123","line":40,"column":3,"nodeType":"124","messageId":"125","endLine":50,"endColumn":4},{"ruleId":"126","severity":1,"message":"127","line":46,"column":25,"nodeType":"128","messageId":"125","endLine":46,"endColumn":27},{"ruleId":"112","severity":1,"message":"129","line":4,"column":27,"nodeType":"114","messageId":"115","endLine":4,"endColumn":33},{"ruleId":"112","severity":1,"message":"130","line":4,"column":35,"nodeType":"114","messageId":"115","endLine":4,"endColumn":41},{"ruleId":"112","severity":1,"message":"131","line":4,"column":43,"nodeType":"114","messageId":"115","endLine":4,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":26,"column":9,"nodeType":"134","endLine":26,"endColumn":58},{"ruleId":"112","severity":1,"message":"135","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":11},{"ruleId":"112","severity":1,"message":"136","line":28,"column":16,"nodeType":"114","messageId":"115","endLine":28,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":254,"column":6,"nodeType":"139","endLine":254,"endColumn":60,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":254,"column":7,"nodeType":"142","endLine":254,"endColumn":59},{"ruleId":"126","severity":1,"message":"143","line":265,"column":35,"nodeType":"128","messageId":"125","endLine":265,"endColumn":37},{"ruleId":"126","severity":1,"message":"143","line":272,"column":25,"nodeType":"128","messageId":"125","endLine":272,"endColumn":27},{"ruleId":"126","severity":1,"message":"143","line":276,"column":36,"nodeType":"128","messageId":"125","endLine":276,"endColumn":38},{"ruleId":"126","severity":1,"message":"143","line":283,"column":26,"nodeType":"128","messageId":"125","endLine":283,"endColumn":28},{"ruleId":"126","severity":1,"message":"143","line":287,"column":35,"nodeType":"128","messageId":"125","endLine":287,"endColumn":37},{"ruleId":"126","severity":1,"message":"143","line":294,"column":25,"nodeType":"128","messageId":"125","endLine":294,"endColumn":27},{"ruleId":"126","severity":1,"message":"143","line":298,"column":36,"nodeType":"128","messageId":"125","endLine":298,"endColumn":38},{"ruleId":"126","severity":1,"message":"143","line":305,"column":26,"nodeType":"128","messageId":"125","endLine":305,"endColumn":28},{"ruleId":"126","severity":1,"message":"143","line":309,"column":36,"nodeType":"128","messageId":"125","endLine":309,"endColumn":38},{"ruleId":"126","severity":1,"message":"143","line":316,"column":26,"nodeType":"128","messageId":"125","endLine":316,"endColumn":28},{"ruleId":"126","severity":1,"message":"143","line":320,"column":35,"nodeType":"128","messageId":"125","endLine":320,"endColumn":37},{"ruleId":"126","severity":1,"message":"143","line":327,"column":25,"nodeType":"128","messageId":"125","endLine":327,"endColumn":27},{"ruleId":"126","severity":1,"message":"143","line":331,"column":35,"nodeType":"128","messageId":"125","endLine":331,"endColumn":37},{"ruleId":"126","severity":1,"message":"143","line":338,"column":25,"nodeType":"128","messageId":"125","endLine":338,"endColumn":27},{"ruleId":"112","severity":1,"message":"144","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":13},{"ruleId":"112","severity":1,"message":"145","line":8,"column":8,"nodeType":"114","messageId":"115","endLine":8,"endColumn":22},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Moment' is defined but never used.","Identifier","unusedVar","'Dashnav' is defined but never used.","'Mainname' is defined but never used.","'Total' is defined but never used.","'Charts' is defined but never used.","'Tables' is defined but never used.","'isNowWeekday' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Box' is defined but never used.","'Time' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sum'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","Expected '===' and instead saw '=='.","'Input' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [sum]",{"range":"151","text":"152"},[6337,6391],"[sum]"]